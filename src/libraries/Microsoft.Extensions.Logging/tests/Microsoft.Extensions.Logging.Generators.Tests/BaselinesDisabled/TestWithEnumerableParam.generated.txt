// <auto-generated/>
#nullable enable

namespace Microsoft.Extensions.Logging.Generators.Tests.TestClasses
{
    partial class TestWithEnumerableParam 
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.0.0")]
        private readonly struct __LogMethodStruct : global::System.Collections.Generic.IReadOnlyList<global::System.Collections.Generic.KeyValuePair<string, object?>>
        {
            private readonly global::System.Int32 _p0;
            private readonly global::System.Collections.Generic.IEnumerable<global::System.Int32> _p1;

            public __LogMethodStruct(global::System.Int32 p0, global::System.Collections.Generic.IEnumerable<global::System.Int32> p1)
            {
                this._p0 = p0;
                this._p1 = p1;

            }

            public override string ToString()
            {
                var p0 = this._p0;
                var p1 = __Enumerate((global::System.Collections.IEnumerable ?)this._p1);

                return $"M2{p0}{p1}";
            }

            public static string Format(__LogMethodStruct state, global::System.Exception? ex) => state.ToString();

            public int Count => 3;

            public global::System.Collections.Generic.KeyValuePair<string, object?> this[int index]
            {
                get => index switch
                {
                    0 => new global::System.Collections.Generic.KeyValuePair<string, object?>("p0", this._p0),
                    1 => new global::System.Collections.Generic.KeyValuePair<string, object?>("p1", this._p1),
                    2 => new global::System.Collections.Generic.KeyValuePair<string, object?>("{OriginalFormat}", "M2{p0}{p1}"),

                    _ => throw new global::System.IndexOutOfRangeException(nameof(index)),  // return the same exception LoggerMessage.Define returns in this case
                };
            }

            public global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, object?>> GetEnumerator()
            {
                for (int i = 0; i < 3; i++)
                {
                    yield return this[i];
                }
            }

            global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator() => GetEnumerator();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "6.0.0.0")]
        public static partial void LogMethod(global::Microsoft.Extensions.Logging.ILogger logger, global::System.Int32 p0, global::System.Collections.Generic.IEnumerable<global::System.Int32> p1)
        {
            if (logger.IsEnabled(global::Microsoft.Extensions.Logging.LogLevel.Error))
            {
                logger.Log(
                    global::Microsoft.Extensions.Logging.LogLevel.Error,
                    new global::Microsoft.Extensions.Logging.EventId(12, nameof(LogMethod)),
                    new __LogMethodStruct(p0, p1),
                    null,
                    __LogMethodStruct.Format);
            }
        }
    }
}